Avant
	* Création du dépot GIT
	* prise en main de la carte STM32L Discovery
	* Compréhension de l'API de Qemu à partir de stellaris.c et du wiki Air 
		http://air.imag.fr/mediawiki/index.php/Stellaris_Luminary_Lm3s6965
	

7/02/2012
	* Création et début de rédaction du fichier stm32.c dans hw


20/02/2012
Fait :
	* Compilation et modification du fichier stm32
	* initialisation des gpio -> interruption non gérée
	* recherche sur les interruptions


21/02/2012
Fait :
	* Compilation et test du fichier blink
	* Debuggage de l'émulation
	* Rem: Absence de la fonction sys_init
	
27/02/2012
Fait :
	* Deboggage de l'émulation
	* Début de réalisation du peripherique GPIO
	
05 et 06/03/2012
	* Test du programme Blink sur la carte ECHEC
	* Decouverte d'un autre programme de test
	* Test du programme reussi avec ajout de RCC->AHBEND
	
12/03/2012
	* chardev implémenter sur le GPIO B
	* gestion des IRQ de sorties des GPIO
	* Emulation sommaire du RCC
	* Programme de test basique en python cree
	
19/03/2012
	* Attention, Stellaris utilise la flash à l'@ 0x00000000 alors que STM
	  utilise la flash à l'@ 0x08000000 -> Force le jumper en position flash
	  (cf Ref: p42)

20/03/2012
	* CA MARCHE !
	* Modif de l'initialisation du chardev
	* Chardev fonctionnel avec le programme python
	
27/03/2012
	* Programme Python
	* Recherche sur les IT
		* Regarder le prog telechargé:
			Faire le prog sur la carte
			Comprendre comment ca fonctionne
			Ajouter l'emulation dans qemu
		* Si le bit correspondant est activé dans Int Mask Register
		  Et si la detection de la pin est parametré (type: front)
			Changement sur la ligne d'entrée
				Generation d'une req d'IT
				pending bit initialisé
		
02/04/2012
	* Creer un module led avec affichage avec chardev
	* Creer un module bouton avec commande par chardev
	* Connecter les leds et les boutons au GPIO B
	
TODO :
	* Faire un programme de Démo jolie pour Donzet
	* Compléter le Wiki
	* Faire les tests des gpios

